@startuml
actor MSGMember
participant "MSGSystem" as msg
participant "Investment" as inv
participant "OperatingExpense" as op
participant "Mortgage" as mort

MSGMember -> msg : calculateAvailableFundsForWeek()
activate msg

msg -> msg : calculateWeeklyInvestmentReturn()
activate msg
    msg -> msg : calculateInvestmentReturn()
    activate msg
        loop for each investment
            msg -> inv : getExpectedAnnualReturn()
            return annualReturn
        end
    deactivate msg

msg -> op : calculateWeeklyExpense()
activate op
return weeklyOperatingExpense
deactivate op

msg -> msg : calculateWeeklyMortgagePayments()
activate msg
    loop for each mortgage
        msg -> mort : getWeeklyPayment()
        return payment
        msg -> mort : getAnnualInsurancePremium()
        return insurance
    end
deactivate msg

msg -> msg : calculateWeeklyGrants()
activate msg
    loop for each mortgage
        msg -> mort : getAnnualInsurancePremium()
        return premium
        msg -> mort : getAnnualPropertyTax()
        return tax
        msg -> mort : getWeeklyPayment()
        return payment
        msg -> mort : getWeeklyIncome()
        return income
    end
deactivate msg

msg --> MSGMember : return availableFundsForWeek

@enduml